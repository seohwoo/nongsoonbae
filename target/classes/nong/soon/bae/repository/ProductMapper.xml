<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="nong.soon.bae.repository.ProductMapper">

	<!-- 내 이름 가져오기 -->
	<select id="selectMyName" parameterType="String" resultType="String">
		select name from users where username=#{username}
	</select>

	<!-- 내 상점 정보 등록하기 -->
	<insert id="shopListInsert" parameterType="nong.soon.bae.bean.ShopListDTO">
		insert into shoplist (username, shopname, shopcontent, regdate, address) 
	    values (
	        #{username},
	        #{shopname}, 
	        #{shopcontent}, 
	        sysdate,
	        #{address} )
	</insert>	

	<!-- 내 상점 테이블 만들기 -->
	<insert id="createProduct" parameterType="String">
		create table ${username}_product (
			optionnum varchar2(50) primary Key not null,
			username varchar2(50) not null,
			productnum varchar2(50) not null,
			optionname varchar2(200) not null,
			price number not null,
			productcount number not null,
			sellnount number default 0 not null )
	</insert>
	
	<!-- FINISH -->
	
	<!-- TEST -->
	
	<!-- 상품 등록하기 -->
	<insert id="productInsert" parameterType="nong.soon.bae.bean.AllProductDTO">
		insert into allproduct (productnum, productname, username, content, startdate,
		enddate, cate1, cate2, cate3, area1, area2)
		values (
			TO_NUMBER(TO_CHAR(SYSDATE, 'YY') || ${catenum} || LPAD(${seqnum}_seq.nextval, 5, '0')), 
			#{productname},
			#{username},
			#{content},
			sysdate,
			#{enddate},
			#{cate1},
			#{cate2},
			#{cate3},
			#{area1},
			#{area2} )
	</insert>
	
	<!-- 상점 주소 가져오는 코드 -->
	<select id="selectAddress" resultType="String" parameterType="String">
		select address from shoplist where username=#{username}
	</select>
	
	<!-- area1 값 가져오는 코드 -->
	<select id="selectArea1" resultType="int" parameterType="String">
		select area1 from area where areaname=#{areaname}
	</select>
	
	<!-- area2 값 가져오는 코드 -->
	<select id="selectArea2" resultType="int">
		select area2 from area where areaname=#{area2Address} and area1=#{area1}
	</select>
	

	
	<!-- 상품 등록할 때 이미지 넣기 -->
	<insert id="imagesInsert" parameterType="nong.soon.bae.bean.ImagesDTO">
		insert into ${username}_images values (
			#{productnum},
			#{username},
			#{filename} )
	</insert>
	
	<!-- 상품 등록할 때 username_product에 옵션들 넣기 -->
	<insert id="optionInsert" parameterType="nong.soon.bae.bean.ProductDTO">
		insert into ${username}_product (optionnum, username, productnum, 
		optionname, price, productcount)
		values (
			TO_NUMBER(TO_CHAR(SYSDATE, 'YY') || ${catenum} || LPAD(${seqnum}_seq.nextval, 5, '0')), 
			#{username}, 
			#{productnum}, 
			#{optionname}, 
			#{price}, 
			#{productcount} )
	</insert>
	
	<!-- 카테고리 대분류 -->
	<select id="selectCate1" resultType="nong.soon.bae.bean.ProductCategoryDTO">
		select * from productcategory where cate1>0 and cate2=0 and cate3=0 order by cate1 asc
	</select>
	
	<!-- 카테고리 중분류 -->
	<select id="selectCate2" resultType="nong.soon.bae.bean.ProductCategoryDTO">
		select * from productcategory where cate1=#{cate1} and cate2 > 0 and cate3=0 order by cate2 asc
	</select>
	
	<!-- 카테고리 소분류 -->
	<select id="selectCate3" resultType="nong.soon.bae.bean.ProductCategoryDTO" >
		select * from productcategory where cate1=#{cate1} and cate2 = #{cate2} and cate3 > 0 order by cate3 asc
	</select>
	

	<!-- 상품 등록한 직후의 productnum 구하기 -->
	<select id="selectAllProductLastProductNum" resultType="nong.soon.bae.bean.AllProductDTO" parameterType="String">
		select * from allproduct where username=#{username} order by startdate desc
	</select>
	
	
	<!-- 내 상점 페이지에 필요한 정보들 가져오기 -->
	<select id="selectMyShop" resultType="nong.soon.bae.bean.ShopListDTO" parameterType="String">
		SELECT s.shopname, s.shopcontent, s.address, u.name,
  		ud.image, ud.followers FROM Shoplist s
  		JOIN users u ON s.username = u.username
  		JOIN userdetails ud ON s.username = ud.username
		WHERE s.username = #{username}
	</select>
	
	
	<!-- 유저의 상품들 가져오기 -->
	<select id="selectUsernameProduct" resultType="nong.soon.bae.bean.AllProductDTO" parameterType="String">
		SELECT ap.username, ap.productnum, ap.wishcnt, ap.readcnt, ap.productname, di.filename, dp.price FROM AllProduct ap 
		LEFT JOIN (SELECT productnum, filename FROM ${username}_images
    		WHERE filename LIKE '%\_1%' escape '\' ORDER BY filename ASC)
   			di ON ap.productnum = di.productnum
  		LEFT JOIN (SELECT productnum, MIN(price) AS price FROM ${username}_product
    		GROUP BY productnum) dp ON ap.productnum = dp.productnum
			WHERE ap.username = #{username}
	</select>
	
	<!-- 상품 등록할 때 상품 리뷰 테이블 만들기 -->
	<insert id="createReviews" parameterType="String">
		create table ${createReviewsProductnum}_reviews (
			username varchar2(50) not null,
			productnum varchar2(50) not null,
			optionnum varchar2(50) not null,
			content varchar2(4000) not null,
			imagecount number default 0 not null,
			stars number default 5 not null,
			regdate date not null )
	</insert>

	<!-- sample -->
	<select id="sampleAddress" resultType="String" parameterType="String">
		select Address from shoplist where username=#{username} 
	</select>


</mapper>    


	<!-- 가장 최근의 상품번호값 없으면 카운트0 있으면 상품 수 
	<select id="selectLastProductNumCnt" resultType="int">
		select count(*) from ${username}_product where optionnum like #{keyword}
	</select>
		
	 상품번호가 있으면 상품번호 뽑아오는거 
	<select id="selectLastProductNum" parameterType="String" resultType="nong.soon.bae.bean.AllProductDTO">
		select * from allproduct WHERE productnum LIKE #{keyword} order by startdate desc
	</select>
	
	<select id="selectOptionNum" resultType="String">
		select optionnum from ${username}_product where optionnum like #{keyword} order by optionnum desc
	</select>
	-->	